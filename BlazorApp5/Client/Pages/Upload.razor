@page "/Upload"
@using BlazorApp5.Shared.Models.AzureVideoIndexer.UploadVideo
@using BlazorApp5.Shared.Models.AzureVideoIndexer.ListLanguajes
@inject HttpClient httpClient

<div class="container">
    <div class="input-group">
        <span class="input-group-text">
            Name
        </span>
        <input type="text" placeholder="Type Video Name" @bind="Name" />
    </div>
    <div class="input-group">
        <span class="input-group-text">
            Video Url
        </span>
        <input type="text" placeholder="Type Source Video" @bind="VideoUrl" />
    </div>
    <div class="input-group">
        <span class="input-group-text">
            Send succes email
        </span>
        <input type="checkbox" @bind="SendSuccessEmail" />
    </div>
    <div class="input-group">
        <label for="cars">Choose a Languaje:</label>
        @if (this.ListLanguajes != null)
        {
            <select name="cars" id="cars" @bind="Languaje">
                @foreach (var Languajes in this.ListLanguajes)
                {
                    <option value="@Languajes.languageCode">@Languajes.name</option>
                }
            </select>
        }
    </div>
    <div class="input-group">
        @if (IsUploading == false)
        {
            <button type="button" class="btn btn-primary" @onclick="UploadVideo">UpLoad</button>
        }
        else
        {
            <div class="d-flex justify-content-center">
                <div class="spinner-border" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
        }
    </div>
</div>
<div class="row">
    @Message
</div>

@code {
    private List<Result2> ListLanguajes { get; set; }
    private string Name { get; set; }
    private string VideoUrl { get; set; }
    private string Languaje { get; set; }
    private bool SendSuccessEmail { get; set; } = true;
    private bool IsUploading { get; set; } = false;
    private string Message { get; set; }
    private string MensajeLenguaje { get; set; }
    private string MensajeHola { get; set; }

    protected override async Task OnInitializedAsync()
    {
        MensajeLenguaje = "Hola";
        MensajeHola = "Chao";

        string Test = "";
        this.ListLanguajes = await httpClient.GetFromJsonAsync<List<Result2>>("VideoIndexer/GetLanguajes");
        @foreach (var Languajes in this.ListLanguajes)
        {
            Test = Languajes.name;
        }
    }

    private async Task UploadVideo()
    {
        IsUploading = true;
        await Task.Delay(6000);

        UploadVideoModel model =
        new UploadVideoModel()
            {
                Name = this.Name,
                Languaje = this.Languaje,
                VideoUrl = this.VideoUrl,
                SendSucccesEmail = this.SendSuccessEmail
            };
        var result = await httpClient.PostAsJsonAsync<UploadVideoModel>("/VideoIndexer/UploadVideo", model);
        this.Message = result.ReasonPhrase;
        IsUploading = false;
    }
}
